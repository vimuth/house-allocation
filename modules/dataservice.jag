<%


var url = 'http://10.100.4.54:9763/services/house_allocation/';
var events_url = 'http://10.100.4.54:9763/services/house_allocation/events/';
var activities_url = 'http://10.100.4.54:9763/services/house_allocation/activities/';
var awards_url = 'http://10.100.4.54:9763/services/house_allocation/awards/';
var awards_instance_url = 'http://10.100.4.54:9763/services/house_allocation/awards_instance/';
var event_instance_url='http://10.100.4.54:9763/services/house_allocation/event_instance';
var votes_url = 'http://10.100.4.54:9763/services/house_allocation/votes/';
var votesNominee_url = 'http://10.100.4.54:9763/services/house_allocation/votes_nominee/';
var peopleNames_url = 'http://10.100.4.54:9763/services/house_allocation/people_names/';
var current_elections_url = 'http://10.100.4.54:9763/services/house_allocation/current-elections/';



var HOUSES = ['Cloud Bots', 'Legion', 'Titans' , 'WildBoars'];

var log = new Log();

//gets details about an event when given the id
function getEvent(id){
	var eventData = parse(get(events_url+id,null,{
		"Accept":"application/json"},"application/json").data);
		var activityData = parse(get(url+'event/activities/'+id,null,{
			"Accept":"application/json"},"application/json").data);
			var awardData = parse(get(url+'event/awards/'+id,null,{
				"Accept":"application/json"},"application/json").data);


				if(!(activityData.activityCollection.activity instanceof Array)){
					activityData.activityCollection.activity = [activityData.activityCollection.activity];
				}

				if(!(awardData.awardCollection.award instanceof Array)){
					awardData.awardCollection.award = [awardData.awardCollection.award];
				}
				return {'event':eventData.eventCollection.event,'activities':activityData.activityCollection,'awards':awardData.awardCollection.award};
}

function addEvent(data){
	var optionalHeaders = {
		"Accept":"application/json" };

		var result = post(events_url, data.event, optionalHeaders, "json");

		// 		log.info(result);

		event_id = result.data.GeneratedKeys.Entry.ID

		var activities = data.activities;
		for(var i=0;i<activities.length;i++){
			var activity = {
				"eventID":event_id,"name":activities[i].name,"description":activities[i].desc,"type":activities[i].type};
				var result = post(activities_url, activity, optionalHeaders, "json");

		}

		var awards = data.awards;
		for(var i=0;i<awards.length;i++){
			var award = {
				"event_id":event_id,"name":awards[i].name,"description":awards[i].description,"type":awards[i].type,"isVote":awards[i].isVote};
				var result = post(awards_url, award, optionalHeaders, "json");

				// 				log.info(result);
		}

		return event_id;
}

function getEventIDFromName(data){

	newURl = 'http://localhost:9763/services/house_allocation/';
	var optionalHeaders = {
		"Accept":"application/json" };
		var result = get(newURl+'event_id_from_name/'+encodeURI(data.eventInstance.eventName),null,{
			"Accept":"application/json"},"application/json");
			log.info(result);
			var eventIdObj = parse(result.data);
			var eventID = eventIdObj.event_id.event_id.id;

			return eventID;
}

function addEventInstance(data){

	log.info("received data:"+data);
	newURl = 'http://localhost:9763/services/house_allocation/';
	var eventID = this.getEventIDFromName(data);
	var eventInstName = data.eventInstance.name;
	log.info("Received event instance"+data.eventInstance);
	var optionalHeaders =
	{
		"Accept":"application/json"};
		var result = get(newURl+'event_id_from_name/'+data.eventInstance.eventName,null,optionalHeaders,"application/json");

		var eventIdObj = parse(result.data);
		var eventID = eventIdObj.event_id.event_id.id;
		var eventInstName = data.eventInstance.name;
		var eventInstDescription = data.eventInstance.description;
		var eventInstStartDate = data.eventInstance.startDate;
		var eventInstEndDate = data.eventInstance.endDate;


		var eventInst={
			"name": eventInstName,"event_id":eventID, "description":eventInstDescription, "startDate":eventInstStartDate, "endDate":eventInstEndDate};

			var result = post(newURl+"add_event_instance", eventInst, optionalHeaders, "json");
			log.info("Add event instance:"+eventInst);
			event_instance_id = result.data.GeneratedKeys.Entry.ID;

			var activityInstances = data.activityInstance;
			log.info("received activities:"+activityInstances);
			var awardInstances = data.awardInstance;

			log.info("received awards:"+awardInstances);

			for(var i=0;i<activityInstances.length;i++){
				log.info(i);
				var activityInstance = {
					"event_instance_id":event_instance_id,"activity_id":activityInstances[i].activityID,"datetime":activityInstances[i].activityInstDate,"venue":activityInstances[i].activityInstVenue,"description":activityInstances[i].activityInstDesc};
					var result = post(newURl+"add_activity_instance", activityInstance, optionalHeaders, "json");
					log.info("added activity instance :"+activityInstance);
			}

			for (var i=0;i<awardInstances.length;i++){
				var awardInstance = {
					"event_instance_id":event_instance_id,"event_award_id":awardInstances[i].awardID,"vote_startDate":awardInstances[i].awardInstStart,"vote_endDate":awardInstances[i].awardInstEnd};
					var result = post(newURl+"add_award_instance", awardInstance, optionalHeaders, "json");
					log.info("added event award instance: "+awardInstance);
			}

			return event_instance_id;
}

function getActivitiesAndAwardsForEvent(data){

	var dataDup = {
		"eventInstance":data
	};
	var eventID = this.getEventIDFromName(dataDup);
	log.info("########################"+eventID);
	var activities = this.getActivitiesForEventID(eventID);
	var awards = this.getAwardsForEventID(eventID);
	var eventActivitiesAndAwards = {
		"activities":activities.activityCollection.activity,"awards":awards.event_awardCollection.event_award};

		return eventActivitiesAndAwards;
}

function getActivitiesForEventID(id){
	newURl = 'http://localhost:9763/services/house_allocation/';
	var data = get(newURl+'activities_from_event_id/'+id,null,{
		"Accept":"application/json"},"application/json");
		log.info("received activities:"+data.data);

		log.info(data);
		return parse(data.data);
}

function getAwardsForEventID(id){
	newURl = 'http://localhost:9763/services/house_allocation/';
	var data = get(newURl+'awards_from_event_id/'+id,null,{
		"Accept":"application/json"},"application/json");
		log.info("received awards:"+data.data);
		return parse(data.data);

}

function updateEvent(event){
	var headers = {
		"Accept": "application/json"};

		var result = post(url+'edit-event',event,headers,'json', function(data,xhr){
			log.info("successfully updated the event");
		});


			var activities = data.activities;
			for(var i=0;i<activities.length;i++){
				var activity = {
					"eventID":event_id,"name":activities[i].name,"description":activities[i].desc,"type":activities[i].type};
					var result = post(activities_url, activity, optionalHeaders, "json");

			}

			var awards = data.awards;
			for(var i=0;i<awards.length;i++){
				var award = {
					"event_id":event_id,"name":awards[i].name,"description":awards[i].description,"type":awards[i].type,"isVote":awards[i].isVote};
					var result = post(awards_url, award, optionalHeaders, "json");
			}

			var deletedActivities = data.deletedActivities;
			for(var i=0;i<deletedActivities.length;i++){
				deleteActivity(deletedActivities[i]);
			}

			var deletedAwards = data.deletedAwards;
			for(var i=0;i<deletedAwards.length;i++){
				deleteAward(deletedAwards[i]);
			}


			for(var id in data.editedActivities){
				var result = post(url+'activity/edit/',data.editedActivities[id] ,optionalHeaders,'json', function(data,xhr){
					log.info("successfully updated the activity");
				});

			}

			for(var id in data.editedAwards){
				var result = post(url+'award/edit/',data.editedAwards[id] ,optionalHeaders,'json', function(data,xhr){
					log.info("successfully updated the award");
				});
			}
}

function getEvents(){
	var data = get(url+'events',null,{
		"Accept":"application/json"},"application/json");
		return parse(data.data);
		log.info(data.eventCollection);
}

function getAwards(){
	var data = get(url+'awards_instance',null,{
		"Accept":"application/json"},"application/json");
		return parse(data.data);
}



function getEventNames(){
	newURl = 'http://localhost:9763/services/house_allocation/';
	var data = get(newURl+'event_names',null,{
		"Accept":"application/json"},"application/json");
		log.info(data.data);
		return parse(data.data);
}

function deleteEvent(id){
	del(url+'events/'+id);
}


function getAwardDetails(event_award_id,event_instance_id){
	var event_awardData=parse(get(awards_url+event_award_id,null,{
		"Accept":"application/json"},"Application/json").data);
		var event_instanceData = parse(get(event_instance_url+'event_instance_id'+id,null,{
			"Accept":"application/json"},"application/json").data);

			if(!(event_instanceData.event_instanceCollection.activity instanceof Array)){
				event_instanceData.event_instanceCollection.activity = [event_instanceData.event_instanceCollection.activity];
			}

			if(!(event_awardData.event_awardCollection.award instanceof Array)){
				event_awardData.event_awardCollection.award = [event_awardData.event_awardCollection.award];
			}
			return {'event_instance':event_instanceData.event_instanceCollection.event_instance,'event_award':event_awardData.event_awardCollection};
}

function getEventInstanceFromEvent(eventID){
	var data = get(url+'event/instants/'+eventID,null,{
		"Accept":"application/json"},"application/json");
		log.info(data);
		return parse(data.data);
}

function getNominees(){
	var data = get(url+'votes',null,{
		"Accept":"application/json"},"application/json");
		return parse(data.data);
}

function getHouseMembers(house_id){
	var data = get(url+'people/house/'+house_id,null,{
		"Accept":"application/json"},"application/json");
		return parse(data.data);
}

function getHouseCount(){
	var data = get(url+'people/house/count',null,{
		"Accept":"application/json"},"application/json");
		return parse(data.data);
}

function getHouse(name){
	var data = get(url+'people/name/'+name,null,{
		"Accept":"application/json"},"application/json");
		return parse(data.data);
}

function addPerson(name,house_id){
	try{
		var optionalHeaders = {
			"Accept":"application/json" };
			var person = {
				"name":name,"house_id":house_id};
				var response = post(url+"people", person, optionalHeaders, "json");
				return true;
	}
	catch(e){
		log.error(e);
		return false;
	}
}

function activatePerson(name){
	try{
		get(url+'people/activate/'+name,null,{
			"Accept":"application/json"},"application/json");
			return true;
	}
	catch(e){
		log.error(e);
		return false;
	}
}

function deactivatePerson(name){
	try{
		get(url+'people/deactivate/'+name,null,{
			"Accept":"application/json"},"application/json");
			return true;
	}
	catch(e){
		log.error(e);
		return false;
	}
}


function getNominees(id){
	var data = get(votesNominee_url+ id,null,{
		"Accept":"application/json"},"application/json");
		var voteData= parse(data.data);
		return voteData;

}

function getNames(id){
	var data = get(peopleNames_url+ id,null,{
		"Accept":"application/json"},"application/json");
		var peopleData= parse(data.data);
		var names= peopleData.peopleCollection.people;


		return names;
			
}

function getCurrentEvents(){
	var data = parse(get(url+'current-events',null,{
		"Accept":"application/json"},"application/json").data);

		if(!(data.Entries.Entry instanceof Array)){
			data.Entries.Entry = [data.Entries.Entry];
		}

		var events = data.Entries.Entry;

		for(var i=0;i<events.length;i++){
			var activities = parse(get(url+'event-instance/next-activity/'+events[i].id,null,{
				"Accept":"application/json"},"application/json").data);

				if(activities.Entries==null){
					activities.Entries = {
						'Entry':null};
				}
				if(!(activities.Entries.Entry instanceof Array)){
					activities.Entries.Entry = [activities.Entries.Entry];
				}
				events[i].activities = activities.Entries.Entry;
		}

		return events;
}

function getEventActivities(id){
	var data = parse(get(url+'event-activities-details',null,{
		"Accept":"application/json"},"application/json").data);

		if(!(data.Entries.Entry instanceof Array)){
			data.Entries.Entry = [data.Entries.Entry];
		}
		return data.Entries;

}

function getPastEvents(){
	var data = parse(get(url+'past-events',null,{
		"Accept":"application/json"},"application/json").data);

		if(!(data.Entries.Entry instanceof Array)){
			data.Entries.Entry = [data.Entries.Entry];
		}
		return data.Entries;

}

function getAwards(){
	var data = parse(get(url+'current-elections',null,{
		"Accept":"application/json"},"application/json").data);
		log.info(data.Entries);
		if(!(data.Entries.Entry instanceof Array)){
			data.Entries.Entry = [data.Entries.Entry];
		}
		return data;
}


//returns a list of activity instances for a given event instance id
function getActivityInstanceForEvent(eventID){
	var data = parse(get(url+'event-instance/activities/'+eventID,null,{
		"Accept":"application/json"},"application/json").data);
		if(!(data.activityCollection.activity instanceof Array)){
			data.activityCollection.activity = [data.activityCollection.activity];
		}
		return data.activityCollection.activity;
}

//returns a list of award instances for a given event instance id
function getAwardInstanceForEvent(eventID){
	var data = parse(get(url+'event-instance/awards/'+eventID,null,{
		"Accept":"application/json"},"application/json").data);
		if(!(data.Entries.Entry instanceof Array)){
			data.Entries.Entry = [data.Entries.Entry];
		}
		log.info(data);
		return data.Entries.Entry;
}

//return all neccasary details about an event instance
function getEventInstance(eventID){
	var eventInstance = parse(get(url+'event-instance/'+eventID,null,{
		"Accept":"application/json"},"application/json").data);

		var awards = getAwardInstanceForEvent(eventID);
		var activities = getActivityInstanceForEvent(eventID);

		return {"eventInstance":eventInstance.event_instanceCollection.event_instance, "awards":awards,"activities":activities };
}



function getId(){
	var data = get(url+ 'people',null,{
		"Accept":"application/json"},"application/json");
		var peopleData= parse(data.data);
		var people= peopleData.peopleCollection;

		return people;
			
}
function addNominee(vote){
	var optionalHeaders = {
		"Accept":"application/json" };

		var result = post(votes_url, vote, optionalHeaders, "json");


}

function getVotes(){
	var data = get(url+'votes',null,{
		"Accept":"application/json"},"application/json");

		return parse(data.data);
}

//deleting an activity. First check if there is any instances of that activity.
//if there are mark the event as null so that event instances can use the data if there is a need
//else delete completely
function deleteActivity(activity_id){
	var activity_instances = get(url+ 'activity/instances/'+activity_id,null,{
		"Accept":"application/json"},"application/json");
		log.info(activity_instances.Entries);
		if(activity_instances.Entries==null){
			del(url+'activity/'+activity_id);
		}
		else{
			get(url+ 'activity/remove-event/'+activity_id,null,{
				"Accept":"application/json"},"application/json");
		}
}

//deleting a award. First check if there is any instances of that award.
//if there are mark the event as null so that event instances can use the data if there is a need
//else delete completely
function deleteAward(award_id){
	var award_instances = get(url+ 'award/instances/'+award_id,null,{
		"Accept":"application/json"},"application/json");
		if(award_instances.Entries==null){
			del(url+'award/'+award_id);
		}
		else{
			get(url+ 'award/remove-event/'+award_id,null,{
				"Accept":"application/json"},"application/json");
		}
}


function searchPeople(name){
	var people = parse(get(url+ 'people/search/'+name,null,{
		"Accept":"application/json"},"application/json").data);

		if(people.Entries==null){
			Entries={
				Entry:[]}
		}
		return people.Entries.Entry;
}



%>
