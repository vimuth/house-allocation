<%

function authorize(request) {

// 	redirectUrl = request.getParameter("location");

// 	if(redirectUrl==null){
// 		redirectUrl	= "index.jag";
// 	}

	// New authorization using app manager SSO
	var header = request.getHeader("X-JWT-Assertion");

	// Create Base64 Object
	var Base64 = require('modules/Base64.js').Base64;

	// 	var dataService = require('modules/dataservice.jag');

	if (header != null) {
		var jwtAssertions = header.split("."); // JWT header by default
		// contains three '.' separated
		// sections
		var jsonString = Base64.decode(jwtAssertions[1]);
		jsonString = jsonString.replace("http://wso2.org/claims/emailaddress",
		"email");
		jsonString = jsonString.replace("http://wso2.org/claims/role", "roles");
		var obj = parse(jsonString);
		var email = obj.email;
		var roles = obj.roles;

		var re = /\\*@wso2.com$/

		if (!re.test(email)) {
			email = email + "@wso2.com";
		}

		if (roles.indexOf("admin") != -1) {
			session.put("username", email);
			session.put("role", "admin");
		} else {
			session.put("username", email);
			session.put("role", "user");
		}

		var dataService = require('modules/dataservice.jag');
		// check users house to see whether he is in the database
		var data = dataService.getHouseByName(email);

		// if there is no entry add the user to the database
		if (data.Entries == "") {

			var api = require('api/houseAllocation.jag');

			// get a house using the allocating algorithm
			var house = api.assignHouse_Difference();

			var result = dataService.addPerson(email, house.house_id);

			if (result) {
				session.put("house", house.house_id);
				response.sendRedirect("house-allocated.jag?house="
						+ house.house_id);
						return;
			} else {
				response.sendRedirect("error.jag");
				return;
			}

		}
		// if the user is in the database
		else {
			session.put("house", data.Entries.Entry.house_id);
// 			response.sendRedirect(redirectUrl);
			return;
		}

	}

}


%>