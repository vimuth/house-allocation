<%

var caramel;
var Handlebars;
var log = new Log();
var dataService = require('modules/dataservice.jag');
var verb = request.getMethod();

////// Adding equal functionality to handlebars
caramel = require('caramel');
Handlebars = require('handlebars');

Handlebars.Handlebars.registerHelper('if_eq', function(a, b,options) {
	if (a == b)
		return options.fn(this);
	else
		return options.inverse(this);
});
//////



	(function () {

		var username=session.get('username');
		var admin= session.get('role')=='admin';

		if(username==null){
			response.sendRedirect("/HouseManagement/login.jag?"+request.getRequestURI());
			return;
		}
		log.info("redirected to house.jag");
		var uriMatcher = new URIMatcher(request.getRequestURI());
		if(uriMatcher.match('/HouseManagement/house/{id}')) {

			// 			try{

			var id = uriMatcher.elements().id;
			var data = dataService.getHouseMembers(id);



			caramel.render({
				'header':{
				'username': username,
				'role': admin,
			},
			'title': {
			text :dataService.HOUSES[id-1]},
			'body': {
			emailString:data.Members.Member.map(function(elem){
				return elem.name;
			}).join(","),
			role:true,house:dataService.HOUSES[id-1],Member:data.Members.Member},
			'sidenav' :{
			'admin': admin}
			});
		}
		// 			catch(e){
		// 				log.error(e);
		// 				response.sendRedirect("/HouseManagement/error.jag");
		// 			}
		else if (uriMatcher.match('/HouseManagement/search-house/{name}')){
			var name= uriMatcher.elements().name;
			if (name.indexOf('@')==-1){
				name = name + '@wso2.com';
			}
			var house = dataService.getHouseByName(name).Entries;
			var houseName;
			log.info(house.Entry.house_id);
			if (house.Entry){
				var houseId = house.Entry.house_id;
				houseName= dataService.getHouse(houseId).name;
			}
			else{
				houseName = "not found";
			}
			log.info("Received house for the member : "+houseName);
			caramel.render({
				'header':{
				'username': username,
				'role': admin
			},
			'title': {
			text :"Houses"},
			'body': {
			'searched':{'member':name,'house_name':houseName}
			},
			'sidenav' :{
			'admin': admin, 'house':session.get('house')}
			});
		}

		else{
			caramel.render({
				'header':{
				'username': username,
				'role': admin
			},
			'title': {
			text :"Houses"},
			'body': {
			},
			'sidenav' :{
			'admin': admin, 'house':session.get('house')}
			});
		}

	}());
	%>

