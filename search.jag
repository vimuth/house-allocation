<%
var caramel;
var log = new Log();
var dataService = require('modules/dataservice.jag');
//var eventList = dataService.getEventNames();
var verb = request.getMethod();

(function () {

	//New authorization using app manager SSO
	var header = request.getHeader("X-JWT-Assertion");

	// Create Base64 Object
	//var Base64 = require('../modules/base64.js');

	if(header !=null){
		var jwtAssertions = header.split("."); //JWT header by default contains three '.' separated sections
		var jsonString = btoa(jwtAssertions[1]);
		jsonString = jsonString.replace("http://wso2.org/claims/emailaddress", "email");
		jsonString = jsonString.replace("http://wso2.org/claims/role", "roles");
		var obj = parse(jsonString);
		var email = obj.email;
		var roles = obj.roles;

		if (roles.indexOf("admin") != -1) {
			session.put("username", email);
			session.put("role", "admin");
		} else {
			session.put("username", email);
			session.put("role", "user");
		}
	}

	var username=session.get('username');
	var admin= session.get('role')=='admin';

	if(username==null){
		response.sendRedirect("../login.jag");
		return;
	}

	if (verb=='GET'){

		var uriMatcher = new URIMatcher(request.getRequestURI());
		log.info(request.getRequestURI);
		if(uriMatcher.match('/HouseManagement/search/{name}')) {
			try{
				var eventName = uriMatcher.elements().name;
				var data = {
					"eventName":eventName};
					var eventInstances = dataService.getEventsWithKey(data);
					log.info("received matched events : "+eventInstances);
					caramel = require('caramel');
					caramel.render({
						'header':{
						'username': username,
						'role': admin,
					},
					'title': {
					text :'Matched Events'
					},
					'eventInstances':eventInstances.event_instanceCollection,
					'sidenav' :{
					'admin': admin, 'house':session.get('house')}
					});
			}
			catch(e){
				log.error(e);
			}
		}
		else if(uriMatcher.match('/HouseManagement/search/')) {
			try{
				var data = {
					"eventName":""};
					var eventInstances = dataService.getEventsWithKey(data);
					log.info("received matched events : "+eventInstances);
					caramel = require('caramel');
					caramel.render({
						'header':{
						'username': username,
						'role': admin,
					},
					'title': {
					text :'Matched Events'
					},
					'eventInstances':eventInstances.event_instanceCollection,
					'sidenav' :{
					'admin': admin, 'house':session.get('house')}
					});
			}
			catch(e){
				log.error(e);
			}
		}
	}

}());
%>

