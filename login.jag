<%
var caramel;
var log = new Log();
var verb = request.getMethod();

(function () {

	//when the login page is requested
	if(verb=='GET'){

		caramel = require('caramel');

		caramel.render({
			'location': {
			'redirectlink':request.getQueryString()
		}
		});
	}

	//when submiting the username and password
	if(verb=='POST'){
		var username=request.getParameter("username");
		var password=request.getParameter("password");

		var email = username;



		var admin= session.get('role')=='admin';

		redirectUrl = request.getParameter("location");

		if(redirectUrl==null){
			redirectUrl	= "index.jag";
		}


		//check if the user is the admin user
		if(username.equals("admin"))
		{
			var file = new File("./app.conf");
			file.open("r");
			var conf = parse(file.readAll());
			file.close();
			if(password.equals(conf.admin.password)){
				session.put("username",username);
				session.put("role",'admin');
				response.sendRedirect(redirectUrl);
				return;
			}
			else
				response.sendRedirect('login.jag');
		}
		//if not check user against the ldap
		else{
				
			//fix username for the database
			var re = /\\*@wso2.com$/
				
			if (!re.test(email)) {
				email = email+"@wso2.com";
			}

			var ldapAuth = Packages.com.wso2.housemanagement.security.ldapAuthenticate;;
			var ldapAuthentication = new ldapAuth();

			var LdapConnector = Packages.org.wso2.carbon.ldap.user.LDAPConnector;
			var connector = new LdapConnector();
			var username = connector.getUIDForEmail(email);

			var resultArray = ldapAuthentication.ldapAuth(username,password);

			//if the user is authenticated through the ldap
			if(resultArray == true){

				var dataService = require('modules/dataservice.jag');
				//check users house to see whether he is in the database
				var data = dataService.getHouseByName(email);

				//if there is no entry add the user to the database
				if(data.Entries==""){

					var api = require('api/houseAllocation.jag');

					//get a house using the allocating algorithm
					var house = api.assignHouse_Difference();

					var result = dataService.addPerson(email,house.house_id);

					if(result){
						session.put("username",email);
						session.put("role","user");
						session.put("house",house.house_id);
						response.sendRedirect("house-allocated.jag?house="+house.house_id);
						return;
					}
					else{
						response.sendRedirect("error.jag");
						return;
					}

				}
				//if the user is in the database
				else{
					session.put("username",email);
					session.put("role","user");
					session.put("house", data.Entries.Entry.house_id );
					response.sendRedirect(redirectUrl);
					return;
				}
			}
			//if the user couldnt be authenticated redirect to the login page
			else{
				response.sendRedirect("index.jag");
			}

		}
	}
}());
%>

