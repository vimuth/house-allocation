<%
var caramel;
var log = new Log();
var verb = request.getMethod();

(function () {

	//when the login page is requested
	if(verb=='GET'){

		caramel = require('caramel');

		caramel.render({
			'location': {
			'redirectlink':request.getQueryString()
		}
		});
	}

	//when submiting the username and password
	if(verb=='POST'){
		var username=request.getParameter("username");
		var password=request.getParameter("password");
		var admin= session.get('role')=='admin';
		
		redirectUrl = request.getParameter("location");
		
		if(redirectUrl==null)
			redirectUrl	= "/HouseManagement/"
					

		//check if the user is the admin user
		if(username.equals("admin"))
		{
			if(password.equals("admin")){
				session.put("username",username);
				session.put("role",'admin');
				response.sendRedirect(redirectUrl);
				return;
			}
			else 
				response.sendRedirect('/HouseManagement/login.jag');
		}
		//if not check user against the ldap
		else{

			var ldapAuth = Packages.com.wso2.housemanagement.security.ldapAuthenticate;;
			var ldapAuthentication = new ldapAuth();

			var resultArray = ldapAuthentication.ldapAuth(username,password);

			//if the user is authenticated through the ldap
			if(resultArray == true){

				var dataService = require('modules/dataservice.jag');
				//check users house to see whether he is in the database
				var data = dataService.getHouseByName(username);

				//if there is no entry add the user to the database
				if(data.Entries==""){

					var api = require('api/houseAllocation.jag');

					//get a house using the allocating algorithm
					var house = api.assignHouse_Difference();

					var result = dataService.addPerson(username,house.house_id);

					if(result){
						session.put("username",username);
						session.put("role","user");
						response.sendRedirect("/HouseManagement/house-allocated.jag?house="+house.house_id);
						return;
					}
					else{
						response.sendRedirect("/HouseManagement/error.jag");
						return;
					}

				}
				//if the user is in the database
				else{
					session.put("username",username);
					session.put("role","user");
					response.sendRedirect(redirectUrl);
					return;
				}
			}
			//if the user couldnt be authenticated redirect to the login page
			else{
				response.sendRedirect("index.jag");
			}

		}
	}
}());
%>

