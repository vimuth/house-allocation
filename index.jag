<%
var caramel;
var log = new Log();
var verb = request.getMethod();

(function () {
	var body = "";
	
	//New authorization using app manager SSO
	var header = request.getHeader("X-JWT-Assertion");
	
	// Create Base64 Object
	var Base64 = require('../modules/base64.js');
	
	if(header !=null){
	    var jwtAssertions = header.split("."); //JWT header by default contains three '.' separated sections
	    var jsonString = Base64.decode(jwtAssertions[1]);
	    jsonString = jsonString.replace("http://wso2.org/claims/emailaddress", "email");
	    jsonString = jsonString.replace("http://wso2.org/claims/role", "roles");
	    var obj = parse(jsonString);
	    var email = obj.email;
	    var roles = obj.roles;
	
	    if (roles.indexOf("admin") != -1) {
	        session.put("username", email);
	        session.put("role", "admin");
	    } else {
	        session.put("username", email);
	        session.put("role", "user");
	    }    
	} 
	
	
	
	var admin= session.get('role')=='admin';

	var username=session.get('username');

	if(username==null){
		response.sendRedirect("login.jag?"+request.getRequestURI());
		return;
	}
	
	log.debug("logged in as : " + username);


	var path = "/images";
	var file = new File(path);

	var file_list = file.listFiles();
	var name_list = [];

	for(i=1;i<file_list.length;i++){
		if(file_list[i].getName() !='.DS_Store'){
			name_list.push({
				'name':file_list[i].getName()});
		}
	}


	file.close();
	
	caramel = require('caramel');
	caramel.render({
		'header':{
		'username': username,
		'role': admin
	},
	'title': {
	text :'WSO2 House Competition'},
	'body': {
	text:body,'file':name_list},
	'sidenav' :{
	'admin': admin , 'house':session.get('house')}

	});
}());
%>

